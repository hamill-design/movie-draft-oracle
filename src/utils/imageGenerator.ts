
interface TeamScore {
  playerName: string;
  totalScore: number;
  completedPicks: number;
  totalPicks: number;
}

interface DraftData {
  title: string;
  teamScores: TeamScore[];
  totalMovies: number;
  bestMovie?: {
    title: string;
    score: number;
    playerName: string;
  };
}

export const generateShareImage = async (draftData: DraftData): Promise<string> => {
  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d');
  
  if (!ctx) {
    throw new Error('Canvas not supported');
  }

  // Set canvas dimensions (1920x1080)
  canvas.width = 1920;
  canvas.height = 1080;

  // Draw background gradient
  const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
  gradient.addColorStop(0, '#1f2937'); // gray-800
  gradient.addColorStop(0.5, '#111827'); // gray-900
  gradient.addColorStop(1, '#000000'); // black
  
  ctx.fillStyle = gradient;
  ctx.fillRect(0, 0, canvas.width, canvas.height);

  // Set font properties
  ctx.textAlign = 'left';
  ctx.fillStyle = '#ffffff';

  // Draw title
  ctx.font = 'bold 64px system-ui, -apple-system, sans-serif';
  ctx.fillText('Final Scores', 80, 120);
  
  // Draw draft title
  ctx.font = '36px system-ui, -apple-system, sans-serif';
  ctx.fillStyle = '#9ca3af'; // gray-400
  ctx.fillText(draftData.title, 80, 180);

  // Draw trophy icon (simple text representation)
  ctx.font = '48px system-ui, -apple-system, sans-serif';
  ctx.fillStyle = '#fbbf24'; // yellow-400
  ctx.fillText('🏆', 80, 280);

  // Draw winner information
  const winner = draftData.teamScores[0];
  if (winner) {
    ctx.font = 'bold 48px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#fbbf24'; // yellow-400
    ctx.fillText('CHAMPION', 160, 280);
    
    ctx.font = 'bold 42px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#ffffff';
    ctx.fillText(winner.playerName, 160, 340);
    
    ctx.font = '36px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#9ca3af'; // gray-400
    ctx.fillText(`${winner.totalScore.toFixed(1)} points`, 160, 390);
  }

  // Draw leaderboard section
  ctx.font = 'bold 36px system-ui, -apple-system, sans-serif';
  ctx.fillStyle = '#ffffff';
  ctx.fillText('Leaderboard', 80, 500);

  // Draw top 5 teams
  const topTeams = draftData.teamScores.slice(0, 5);
  topTeams.forEach((team, index) => {
    const yPosition = 560 + (index * 60);
    const rankColors = ['#fbbf24', '#d1d5db', '#f59e0b', '#6b7280', '#6b7280']; // yellow, silver, bronze, gray
    
    // Rank
    ctx.font = 'bold 32px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = rankColors[index];
    ctx.fillText(`#${index + 1}`, 80, yPosition);
    
    // Player name
    ctx.font = '28px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#ffffff';
    ctx.fillText(team.playerName, 150, yPosition);
    
    // Score
    ctx.font = 'bold 28px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#fbbf24'; // yellow-400
    ctx.textAlign = 'right';
    ctx.fillText(`${team.totalScore.toFixed(1)}`, 700, yPosition);
    ctx.textAlign = 'left';
  });

  // Draw statistics section
  ctx.font = 'bold 36px system-ui, -apple-system, sans-serif';
  ctx.fillStyle = '#ffffff';
  ctx.fillText('Draft Stats', 800, 280);

  let statsY = 340;
  
  // Total participants
  ctx.font = '24px system-ui, -apple-system, sans-serif';
  ctx.fillStyle = '#9ca3af'; // gray-400
  ctx.fillText('Participants:', 800, statsY);
  ctx.fillStyle = '#ffffff';
  ctx.fillText(`${draftData.teamScores.length}`, 980, statsY);
  statsY += 50;

  // Total movies
  ctx.fillStyle = '#9ca3af'; // gray-400
  ctx.fillText('Movies Drafted:', 800, statsY);
  ctx.fillStyle = '#ffffff';
  ctx.fillText(`${draftData.totalMovies}`, 1020, statsY);
  statsY += 50;

  // Best movie (if available)
  if (draftData.bestMovie) {
    ctx.fillStyle = '#9ca3af'; // gray-400
    ctx.fillText('Best Movie:', 800, statsY);
    statsY += 35;
    
    ctx.font = 'bold 20px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#fbbf24'; // yellow-400
    ctx.fillText(draftData.bestMovie.title, 800, statsY);
    statsY += 30;
    
    ctx.font = '18px system-ui, -apple-system, sans-serif';
    ctx.fillStyle = '#ffffff';
    ctx.fillText(`${draftData.bestMovie.score.toFixed(1)} pts • ${draftData.bestMovie.playerName}`, 800, statsY);
  }

  // Draw footer
  ctx.font = '20px system-ui, -apple-system, sans-serif';
  ctx.fillStyle = '#6b7280'; // gray-500
  ctx.textAlign = 'center';
  ctx.fillText('Generated by Movie Draft App', canvas.width / 2, canvas.height - 40);

  // Convert canvas to data URL
  return canvas.toDataURL('image/png');
};

export const downloadImage = (dataUrl: string, filename: string) => {
  const link = document.createElement('a');
  link.download = filename;
  link.href = dataUrl;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
};
